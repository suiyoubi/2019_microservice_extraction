<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright (C) 2010-2017 the original author or authors.
                     2017 iObserve Project (https://www.iobserve-devops.net)

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!-- Checkstyle-Configuration: Palladio Coding Conventions Description: none -->
<module name="Checker">

	<!-- iobserve default is warning instead of error -->
	<property name="severity" value="error" />

	<!-- KIEKER Filter -->
	<module name="SuppressWithNearbyCommentFilter">
		<property name="commentFormat" value="NOCS" />
		<property name="checkFormat" value=".*" />
		<property name="influenceFormat" value="0" />
	</module>

	<!-- If you set the basedir property below, then all reported file names 
		will be relative to the specified directory. See http://checkstyle.sourceforge.net/5.x/config.html#Checker 
		<property name="basedir" value="${basedir}"/> <property name="localeCountry" 
		value=""/> JVM locale country <property name="localeLanguage" value=""/> 
		JVM locale language <property name="charset" value=""/> JVM file.encoding 
		property ! -->


	<module name="SuppressionFilter">
		<property name="file" value="suppressions.xml" />
	</module> 

	<!-- !________________________________________________________________________________________ 
		! ! H E A D E R S !________________________________________________________________________________________ 
		! -->
	<!-- Checks the header of a source file against a header file that contains 
		a regular expression ! -->
	<!-- for each line of the source header. ! -->
	<!-- See http://checkstyle.sf.net/config_header.html ! -->
	<!-- Default: OFF -->
	<module name="RegexpHeader">
		<property name="headerFile" value="java-header.sed" />
		<property name="charset" value="UTF-8" />
		<!-- property name="header" value=""/ -->
		<property name="multiLines" value="" />
		<property name="fileExtensions" value="java,xtend" />
	</module>

	<!-- !________________________________________________________________________________________ 
		! ! M I S C E L L A N E O U S !________________________________________________________________________________________ 
		! -->
	<!-- Checks whether files end with a new line. ! -->
	<!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile ! -->
	<module name="NewlineAtEndOfFile">
		<property name="lineSeparator" value="system" />
		<property name="fileExtensions" value="*.*" />
	</module>

	<!-- Checks that property files contain the same keys. ! -->
	<!-- See http://checkstyle.sf.net/config_misc.html#Translation ! -->
	<module name="Translation">
		<property name="fileExtensions" value="properties" />
	</module>


	<!-- !________________________________________________________________________________________ 
		! ! S I Z E V I O L A T I O N S !________________________________________________________________________________________ 
		! -->
	<!-- Checks for long source files. ! -->
	<!-- See http://checkstyle.sf.net/config_sizes.html ! -->
	<module name="FileLength">
		<property name="max" value="2000" />
		<property name="fileExtensions" value="java" />
	</module>

	<module name="TreeWalker">
		<!-- KIEKER -->
		<property name="tabWidth" value="4" />
		<module name="FileContentsHolder" />

		<!-- !________________________________________________________________________________________ 
			! ! A N N O T A T I O N S !________________________________________________________________________________________ 
			! -->
		<!-- This check controls the usage style of annotations. ! -->
		<!-- See http://checkstyle.sourceforge.net/config_annotation.html#AnnotationUseStyle 
			! -->
		<module name="AnnotationUseStyle">
			<property name="elementStyle" value="compact_no_array" />
			<property name="closingParens" value="never" />
			<property name="trailingArrayComma" value="never" />
		</module>

		<!-- Verifies that both the java.lang.Deprecated import is present and 
			the @deprecated Javadoc tag is present when either is present. ! -->
		<!-- See http://checkstyle.sourceforge.net/config_annotation.html#MissingDeprecated 
			! -->
		<!-- KIEKER -->
		<module name="MissingDeprecated">
			<property name="severity" value="info" />
		</module>

		<!-- Verifies that the java.lang.Override annotation is present when the 
			{@inheritDoc} javadoc tag is present. ! -->
		<!-- See http://checkstyle.sourceforge.net/config_annotation.html#MissingOverride 
			! -->
		<module name="MissingOverride">
			<property name="javaFiveCompatibility" value="false" />
		</module>

		<!-- This check makes sure that all package annotations are in the package-info.java 
			file. ! -->
		<!-- See http://checkstyle.sourceforge.net/config_annotation.html#PackageAnnotation 
			! -->
		<module name="PackageAnnotation" />

		<!-- This check allows you to specify what warnings that SuppressWarnings 
			is not allowed to suppress. ! -->
		<!-- You can also specify a list of TokenTypes that the configured warning(s) 
			cannot be suppressed on. ! -->
		<!-- See http://checkstyle.sourceforge.net/config_annotation.html#SuppressWarnings 
			! -->
		<module name="SuppressWarnings">
			<property name="format" value="^$|^\s+$" />
			<property name="tokens"
				value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF,
                                           ANNOTATION_FIELD_DEF, ENUM_CONSTANT_DEF, PARAMETER_DEF,
                                           VARIABLE_DEF, METHOD_DEF, CTOR_DEF" />
		</module>


		<!-- !________________________________________________________________________________________ 
			! ! B L O C K S !________________________________________________________________________________________ 
			! -->
		<!-- Finds nested blocks, i.e. blocks that are used freely in the code. 
			! -->
		<!-- See http://checkstyle.sf.net/config_blocks.html ! -->
		<!-- KIEKER allowInSwitchCase ! -->
		<module name="AvoidNestedBlocks">
			<property name="allowInSwitchCase" value="true" />
		</module>

		<!-- Checks for empty blocks. ! -->
		<!-- See http://checkstyle.sf.net/config_blocks.html ! -->
		<!-- KIEKER removed LITERAL_CATCH ! -->
		<module name="EmptyBlock">
			<property name="option" value="stmt" />
			<property name="tokens"
				value="LITERAL_DO,
                                           LITERAL_ELSE, LITERAL_FINALLY, LITERAL_IF, LITERAL_FOR,
                                           LITERAL_TRY, LITERAL_WHILE, INSTANCE_INIT, STATIC_INIT" />
		</module>

		<module name="JavadocMethod">
			<property name="severity" value="info" />
			<property name="scope" value="protected" />
			<!-- <property name="excludeScope" value=""/> ! -->
			<property name="allowUndeclaredRTE" value="false" />
			<property name="allowThrowsTagsForSubclasses" value="false" />
			<property name="allowMissingParamTags" value="false" />
			<property name="allowMissingThrowsTags" value="false" />
			<property name="allowMissingReturnTag" value="false" />
			<property name="allowMissingJavadoc" value="false" />
			<property name="allowMissingPropertyJavadoc" value="true" />
			<property name="logLoadErrors" value="true" />
			<property name="suppressLoadErrors" value="false" />
			<property name="tokens" value="METHOD_DEF, CTOR_DEF" />
		</module>

		<!-- Validates Javadoc comments to help ensure they are well formed. ! -->
		<!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocStyle ! -->
		<module name="JavadocStyle">
			<property name="severity" value="info" />
			<property name="scope" value="private" />
			<!-- <property name="excludeScope" value=""/> ! -->
			<property name="checkFirstSentence" value="true" />
			<!--TODO: <property name="endOfSentenceFormat" value="([.?!][ \t\n\r\f<])|([.?!]$)"/> 
				! -->
			<property name="checkEmptyJavadoc" value="false" />
			<property name="checkHtml" value="false" />
			<property name="tokens"
				value="INTERFACE_DEF, CLASS_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF" />
		</module>

		<!-- Checks Javadoc comments for class and interface definitions. ! -->
		<!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocType ! -->
		<module name="JavadocType">
			<property name="severity" value="info" />
			<property name="scope" value="private" />
			<!--<property name="excludeScope" value=""/>! -->
			<property name="authorFormat" value="" />
			<!--<property name="versionFormat" value=""/>! -->
			<property name="allowMissingParamTags" value="false" />
			<property name="allowUnknownTags" value="false" />
			<property name="tokens" value="INTERFACE_DEF, CLASS_DEF" />
		</module>

		<module name="JavadocType">
			<property name="severity" value="error" />
			<property name="scope" value="package" />
			<property name="authorFormat" value="\S" />
		</module>

		<!-- Checks that variables have Javadoc comments. ! -->
		<module name="JavadocVariable">
			<property name="excludeScope" value="private" />
		</module>

		<!-- !______________________________________________________________________________ 
			! ! M E T R I C S !______________________________________________________________________________ 
			! -->

		<!-- Checks cyclomatic complexity against a specified limit. ! -->
		<!-- See http://checkstyle.sf.net/config_metrics.html ! -->
		<module name="CyclomaticComplexity">
			<property name="severity" value="ignore" />
			<property name="max" value="10" />
		</module>


		<!-- !______________________________________________________________________________ 
			! ! M I S C E L L A N E O U S !______________________________________________________________________________ 
			! -->
		<!-- Checks the style of array type definitions. ! -->
		<!-- See http://checkstyle.sf.net/config_misc.html ! -->
		<module name="ArrayTypeStyle">
			<property name="javaStyle" value="true" />
		</module>

		<!-- Check that method/constructor parameters are final. ! -->
		<!-- See http://checkstyle.sf.net/config_misc.html ! -->
		<module name="FinalParameters">
			<property name="tokens" value="METHOD_DEF, CTOR_DEF" />
		</module>

		<!-- Checks that the outer type name and the file name match. ! -->
		<!-- See http://checkstyle.sourceforge.net/config_misc.html#OuterTypeFilename 
			! -->
		<module name="OuterTypeFilename" />

		<!-- A check for TODO: comments. Actually it is a generic regular expression 
			matcher on Java comments. ! -->
		<!-- See http://checkstyle.sf.net/config_misc.html ! -->
		<!-- Kieker ! -->
		<module name="TodoComment">
			<property name="format" value="TODO" />
			<property name="severity" value="warning" />
		</module>
		<module name="TodoComment">
			<property name="format" value="FIXME" />
			<property name="severity" value="error" />
		</module>

		<!-- !______________________________________________________________________________ 
			! ! M O D I F I E R S !______________________________________________________________________________ 
			! -->
		<!-- Checks that the order of modifiers conforms to the suggestions in 
			the Java Language specification, ! -->
		<!-- sections 8.1.1, 8.3.1 and 8.4.3. ! -->
		<!-- See http://checkstyle.sf.net/config_modifiers.html ! -->
		<module name="ModifierOrder" />

		<!-- Checks that there are no redundant modifiers. ! -->
		<!-- See http://checkstyle.sf.net/config_modifiers.html ! -->
		<module name="RedundantModifier">
			<property name="tokens"
				value="VARIABLE_DEF,ANNOTATION_FIELD_DEF,INTERFACE_DEF" />
		</module>

		<!-- !______________________________________________________________________________ 
			! ! N A M I N G C O N V E N T I O N S !______________________________________________________________________________ 
			! -->
		<!-- Checks for abstract class name naming conventions. ! -->
		<!-- See http://checkstyle.sf.net/config_naming.html ! -->
		<!-- KIEKER removed |^.*Factory$ -->
		<module name="AbstractClassName">
			<property name="format" value="^Abstract.*$" />
			<property name="ignoreModifier" value="false" />
			<property name="ignoreName" value="false" />
		</module>

		<!-- Checks for class type parameter name naming conventions. ! -->
		<!-- See http://checkstyle.sourceforge.net/config_naming.html#ClassTypeParameterName 
			! -->
		<module name="ClassTypeParameterName">
			<property name="format" value="^[A-Z]$" />
		</module>

		<!-- Checks for constant name naming conventions. ! -->
		<!-- See http://checkstyle.sf.net/config_naming.html ! -->
		<module name="ConstantName">
			<property name="format" value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$" />
			<property name="applyToPublic" value="true" />
			<property name="applyToProtected" value="true" />
			<property name="applyToPackage" value="true" />
			<property name="applyToPrivate" value="true" />
		</module>

		<!-- Checks for local final variable name naming conventions. ! -->
		<!-- See http://checkstyle.sf.net/config_naming.html ! -->
		<module name="LocalFinalVariableName">
			<property name="format" value="^[a-z][a-zA-Z0-9]*$" />
			<property name="tokens" value="VARIABLE_DEF, PARAMETER_DEF" />
		</module>

		<!-- Checks for local variable name naming conventions. ! -->
		<!-- See http://checkstyle.sf.net/config_naming.html ! -->
		<module name="LocalVariableName">
			<property name="format" value="^[a-z][a-zA-Z0-9]*$" />
		</module>


		<!-- Checks for member variable name naming conventions. ! -->
		<!-- See http://checkstyle.sf.net/config_naming.html ! -->
		<module name="MemberName">
			<property name="format" value="^[a-z][a-zA-Z0-9]*$" />
			<property name="applyToPublic" value="true" />
			<property name="applyToProtected" value="true" />
			<property name="applyToPackage" value="true" />
			<property name="applyToPrivate" value="true" />
		</module>

		<!-- Checks for method name naming conventions. ! -->
		<!-- See http://checkstyle.sf.net/config_naming.html ! -->
		<module name="MethodName">
			<property name="format" value="^[a-z][a-zA-Z0-9]*$" />
		</module>

		<!-- Checks for method type parameter name naming conventions. ! -->
		<!-- See http://checkstyle.sourceforge.net/config_naming.html#MethodTypeParameterName 
			! -->
		<module name="MethodTypeParameterName">
			<property name="format" value="^[A-Z]$" />
		</module>

		<!-- Checks for package name naming conventions. ! -->
		<!-- See http://checkstyle.sf.net/config_naming.html ! -->
		<module name="PackageName">
			<property name="format" value="^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$" />
		</module>

		<!-- Checks for parameter name naming conventions. ! -->
		<!-- See http://checkstyle.sf.net/config_naming.html ! -->
		<module name="ParameterName">
			<property name="format" value="^[a-z][a-zA-Z0-9]*$" />
		</module>

		<!-- Checks for static variable name naming conventions. ! -->
		<!-- See http://checkstyle.sf.net/config_naming.html ! -->
		<module name="StaticVariableName">
			<property name="format" value="^[a-z][a-zA-Z0-9]*$" />
			<property name="applyToPublic" value="true" />
			<property name="applyToProtected" value="true" />
			<property name="applyToPackage" value="true" />
			<property name="applyToPrivate" value="true" />
		</module>

		<!-- Checks for type name naming conventions. ! -->
		<!-- See http://checkstyle.sf.net/config_naming.html ! -->
		<!-- KIEKER: modded -->
		<module name="TypeName">
			<property name="format" value="^[A-Z][a-zA-Z0-9]*$" />
			<property name="tokens" value="CLASS_DEF" />
			<property name="applyToPublic" value="true" />
			<property name="applyToProtected" value="true" />
			<property name="applyToPackage" value="true" />
			<property name="applyToPrivate" value="true" />
		</module>

		<module name="TypeName">
			<property name="format" value="^I[A-Z][a-zA-Z0-9]*$" />
			<property name="tokens" value="INTERFACE_DEF" />
			<property name="applyToPublic" value="true" />
			<property name="applyToProtected" value="true" />
			<property name="applyToPackage" value="true" />
			<property name="applyToPrivate" value="true" />
		</module>

		<!-- !______________________________________________________________________________ 
			! ! S I Z E V I O L A T I O N S !______________________________________________________________________________ 
			! -->
		<!-- Checks for long anonymous inner classes. ! -->
		<!-- See http://checkstyle.sf.net/config_sizes.html ! -->
		<!-- KIEKER Set to 50 instead of 20 -->
		<module name="AnonInnerLength">
			<property name="severity" value="info" />
			<property name="max" value="50" />
		</module>

		<!-- See http://checkstyle.sf.net/config_sizes.html ! -->
		<!-- Checks for long lines. ! -->
		<module name="LineLength">
			<property name="severity" value="info" />
			<property name="ignorePattern" value="^$" />
			<property name="max" value="165" />
		</module>

		<!-- Checks the number of methods declared in each type. This includes 
			the number of each scope ! -->
		<!-- (private, package, protected and public) as well as an overall total. 
			! -->
		<!-- See http://checkstyle.sourceforge.net/config_sizes.html#MethodCount 
			! -->
		<module name="MethodCount">
			<property name="severity" value="info" />
			<property name="maxTotal" value="100" />
			<property name="maxPrivate" value="100" />
			<property name="maxPackage" value="100" />
			<property name="maxProtected" value="100" />
			<property name="maxPublic" value="100" />
		</module>

		<!-- Checks for long methods and constructors. ! -->
		<!-- See http://checkstyle.sf.net/config_sizes.html ! -->
		<module name="MethodLength">
			<property name="severity" value="info" />
			<property name="max" value="150" />
			<property name="countEmpty" value="true" />
			<property name="tokens" value="METHOD_DEF, CTOR_DEF" />
		</module>

		<!-- Checks for the number of types declared at the outer (or root) level 
			in a file. ! -->
		<!-- See http://checkstyle.sourceforge.net/config_sizes.html#OuterTypeNumber 
			! -->
		<!-- KIEKER 2 ! -->
		<module name="OuterTypeNumber">
			<property name="max" value="2" />
		</module>

		<!-- !______________________________________________________________________________ 
			! ! W H I T E S P A C E !______________________________________________________________________________ 
			! -->
		<!-- Checks the padding of an empty for initializer. ! -->
		<!-- See http://checkstyle.sf.net/config_whitespace.html ! -->
		<module name="EmptyForInitializerPad">
			<property name="option" value="nospace" />
		</module>

		<!-- Checks the padding of an empty for iterator. ! -->
		<!-- See http://checkstyle.sf.net/config_whitespace.html ! -->
		<module name="EmptyForIteratorPad">
			<property name="option" value="nospace" />
		</module>

		<!-- Checks that the whitespace around the Generic tokens < and > is correct 
			to the typical convention. ! -->
		<!-- See http://checkstyle.sourceforge.net/config_whitespace.html#GenericWhitespace 
			! -->
		<module name="GenericWhitespace" />

		<!-- Checks the padding between the identifier of a method definition, 
			! -->
		<!-- constructor definition, method call, or constructor invocation; and 
			the left parenthesis of the parameter list. ! -->
		<!-- See http://checkstyle.sf.net/config_whitespace.html ! -->
		<module name="MethodParamPad">
			<property name="allowLineBreaks" value="false" />
			<property name="option" value="nospace" />
			<property name="tokens"
				value="CTOR_DEF, LITERAL_NEW, METHOD_CALL, METHOD_DEF, SUPER_CTOR_CALL " />
		</module>

		<!-- Checks that there is no whitespace after a token. ! -->
		<!-- See http://checkstyle.sf.net/config_whitespace.html ! -->
		<!-- KIEKER removed ARRAY_INIT ! -->
		<module name="NoWhitespaceAfter">
			<property name="allowLineBreaks" value="true" />
			<property name="tokens"
				value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS" />
		</module>

		<!-- Checks that there is no whitespace before a token. ! -->
		<!-- See http://checkstyle.sf.net/config_whitespace.html ! -->
		<module name="NoWhitespaceBefore">
			<property name="allowLineBreaks" value="false" />
			<property name="tokens" value="SEMI, POST_DEC, POST_INC" />
		</module>

		<!-- Checks the policy on how to wrap lines on operators. ! -->
		<!-- See http://checkstyle.sf.net/config_whitespace.html ! -->
		<module name="OperatorWrap">
			<property name="option" value="nl" />
			<property name="tokens"
				value="BAND, BOR, BSR, BXOR, COLON, DIV,
                                           EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF,
                                           LOR, LT, MINUS, MOD, NOT_EQUAL,
                                           PLUS, QUESTION, SL, SR, STAR" />
		</module>

		<!-- Checks the policy on the padding of parentheses. ! -->
		<!-- See http://checkstyle.sf.net/config_whitespace.html ! -->
		<module name="ParenPad">
			<property name="option" value="nospace" />
			<property name="tokens" value="CTOR_CALL, METHOD_CALL, SUPER_CTOR_CALL" />
		</module>

		<!-- Checks the policy on the padding of parentheses for typecasts. ! -->
		<!-- See http://checkstyle.sf.net/config_whitespace.html ! -->
		<module name="TypecastParenPad">
			<property name="option" value="nospace" />
			<property name="tokens" value="TYPECAST, RPAREN" />
		</module>

		<!-- Checks that a token is followed by whitespace. ! -->
		<!-- See http://checkstyle.sf.net/config_whitespace.html ! -->
		<module name="WhitespaceAfter">
			<property name="tokens" value="COMMA, SEMI, TYPECAST" />
		</module>

		<!-- Checks that a token is surrounded by whitespace. ! -->
		<!-- See http://checkstyle.sf.net/config_whitespace.html ! -->
		<module name="WhitespaceAround">
			<property name="tokens"
				value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN,
                                           BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, EQUAL, GE, GT, LAND,
                                           LE, LITERAL_ASSERT, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,
                                           LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,
                                           LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT,
                                           MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN,
                                           QUESTION, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN" />
			<property name="allowEmptyConstructors" value="true" />
			<property name="allowEmptyMethods" value="true" />
		</module>

		<module name="RedundantImport" />

		<module name="AvoidNestedBlocks" />
		<module name="EmptyBlock" />
		<module name="LeftCurly" />
		<module name="NeedBraces" />
		<module name="RightCurly" />
		<module name="AvoidInlineConditionals">
			<property name="severity" value="ignore" />
			<metadata name="net.sf.eclipsecs.core.lastEnabledSeverity"
				value="inherit" />
		</module>
		<module name="EmptyStatement" />
		<module name="EqualsHashCode" />
		<module name="HiddenField">
			<property name="tokens" value="VARIABLE_DEF" />
			<property name="ignoreConstructorParameter" value="true" />
			<property name="ignoreSetter" value="true" />
		</module>
		<module name="IllegalInstantiation" />
		<module name="InnerAssignment" />
		<module name="MagicNumber">
			<property name="severity" value="ignore" />
			<metadata name="net.sf.eclipsecs.core.lastEnabledSeverity"
				value="inherit" />
		</module>
		<module name="MissingSwitchDefault" />
		<module name="SimplifyBooleanExpression" />
		<module name="SimplifyBooleanReturn" />
		<module name="DesignForExtension">
			<property name="severity" value="ignore" />
			<metadata name="net.sf.eclipsecs.core.lastEnabledSeverity"
				value="inherit" />
		</module>
		<module name="FinalClass" />
		<module name="HideUtilityClassConstructor">
			<property name="severity" value="ignore" />
			<metadata name="net.sf.eclipsecs.core.lastEnabledSeverity"
				value="inherit" />
		</module>
		<module name="InterfaceIsType" />
		<module name="VisibilityModifier">
			<property name="protectedAllowed" value="true" />
		</module>

		<module name="UpperEll" />
		<module name="WhitespaceAround" />
	</module>

	<module name="NewlineAtEndOfFile">
		<property name="severity" value="ignore" />
		<metadata name="net.sf.eclipsecs.core.lastEnabledSeverity"
			value="inherit" />
	</module>
	<module name="Translation" />
	<module name="FileLength" />
	<module name="FileTabCharacter">
		<property name="severity" value="ignore" />
		<metadata name="net.sf.eclipsecs.core.lastEnabledSeverity"
			value="inherit" />
	</module>
	<module name="RegexpSingleline">
		<property name="severity" value="ignore" />
		<property name="format" value="\s+$" />
		<property name="message" value="Line has trailing spaces." />
		<metadata name="net.sf.eclipsecs.core.lastEnabledSeverity"
			value="inherit" />
	</module>
	<module name="FileTabCharacter">
		<property name="severity" value="ignore" />
		<metadata name="net.sf.eclipsecs.core.lastEnabledSeverity"
			value="inherit" />
	</module>
	<module name="SuppressionCommentFilter">
		<property name="offCommentFormat"
			value="(@generated$)|(// end of custom code$)|(BEGIN GENERATED CODE)" />
		<property name="onCommentFormat"
			value="(@generated NOT$)|(@generated not$)|(@generated Not$)|(// begin of custom code$)|(END GENERATED CODE)" />
		<metadata name="com.atlassw.tools.eclipse.checkstyle.comment"
			value="Supress Warnings on EMF generated code. No Supress Warning on manual code" />
		<metadata name="com.atlassw.tools.eclipse.checkstyle.customMessage"
			value="Warning suppressed because code is generated by EMF. Warning enabled on custom code" />
	</module>
</module>
